## Summary of Changes in version 4.9 ##

### SuiteBuilder ###

A new way of declaring suites to run.  SuiteBuilder allows for flexible
specification of where to find the classes containing tests, and how
to filter the resulting runners.  This suite class lists the
explicit test classes to consider running, and then filters it down
to only those tests or classes annotated with `@Category(Yes.class)`:

	@RunWith(SuiteBuilder.class)
	public class OnlyYes {
		@Classes
		public Listed classes= new Listed(Yes1.class, Yes2.class, No1.class);

		@RunnerFilter
		public CategoryFilter filter= CategoryFilter.include(Yes.class);
	}
	
We hope to soon include other implementations for the @Classes annotation,
including a classpath-searching test gatherer.

### ClassRule ###

The ClassRule annotation extends the idea of method-level Rules,
adding static fields that can affect the operation of a whole class:

	public class Counter extends ExternalResource {
		public int count = 0;

		@Override
		protected void before() throws Throwable {
			count++;
		}		
	}
	
	public class ExampleTestWithClassRule {
		@ClassRule
		public static Counter counter= new Counter();

		@Test
		public void firstTest() {
			assertEquals(1, counter.count);
		}

		@Test
		public void secondTest() {
			assertEquals(1, counter.count);
		}
	}

### Bug fixes ###

- github#98: assumeTrue() does not work with expected exceptions